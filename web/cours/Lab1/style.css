body {
    margin: 0;
    padding: 0;
}

#stand-background {
    background: radial-gradient(circle, rgba(70,255,255,1) 30vh, rgba(19,129,110,1) 92vh);
    height: 100vh;
}

#stand-foreground {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
    background: url("assets/sadida_stand_v2.png") no-repeat center/70vh;
    --cube-size: 16vh;
    --light-cube-size: 12vh;
}

#stand-foreground.no-foreground {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
    background: none;
    --cube-size: 200px;
}

.cube {
    position: absolute;
    height: var(--cube-size);
    width: var(--cube-size);
    transform-style: preserve-3d;
    transform-origin: 50% 50%;
    animation: sphere 20s cubic-bezier(.6,-0.31,.27,1.55) infinite;
}

.face {
    position: absolute;
    width: var(--cube-size);
    height: var(--cube-size);
    background: url("assets/eliacube.png") center/100% 100% no-repeat;
    border-radius: 2px;
    animation: brightness 20s cubic-bezier(.6,-0.31,.27,1.55) infinite;
}

#stand-control {
    position: absolute;
    bottom: 0;
    left: 0;
    margin: 10px;
    padding: 10px;
}

#stand-control button {
    width: 50px;
    height: 50px;
    background-color: rgba(0, 0, 0, 0.2);
    border: none;
    border-radius: 100%;
    cursor: pointer;
}

#stand-control i {
    font-size: 30px;
    color: rgba(0, 0, 0, 0.5);
}

#front {
    transform: translateZ(calc(var(--cube-size)/2));
    /*background: none*/
}
/*#front::after {
    content: '';
    position: absolute;
    background-color: white;
    width: var(--light-cube-size);
    height: var(--light-cube-size);
    transform: translateX(20px);
}*/

#back {
    transform: translateZ(calc(-1*var(--cube-size)/2)) rotateY(180deg);
    /*background: none;*/
}

#top {
    transform: rotateX(90deg) translateZ(calc(var(--cube-size)/2));
    /*background: none;*/
}

#bottom {
    transform: rotateX(90deg) translateZ(calc(-1*var(--cube-size)/2));
    /*background: none;*/
}

#left {
    transform: rotateY(90deg) translateZ(calc(-1*var(--cube-size)/2));
    /*background: none;*/
}

#right {
    transform: rotateY(90deg) translateZ(calc(var(--cube-size)/2));
    /*background: none;*/
}

/****************
    Animation
****************/
@keyframes rotation {
    from {
        transform: rotateX(0deg) rotateY(0deg);
    }

    to {
        transform: rotateX(360deg) rotateY(360deg);
    }
}

@keyframes sphere { 
    0% {
        transform: rotateY(0deg) rotateZ(0deg) rotateX(0deg);
        top: 40%; 
    }
    50% {
        top: 25%;
    }
    100% {
        transform: rotateY(360deg) rotateZ(360deg) rotateX(360deg);
        top: 40%;
    }
}

@keyframes overlay {
    0% {
        top: 30%; 
    }
    50% {
        top: 15%;
    }
    100% {
        top: 30%;
    }
}

@keyframes brightness {
    0% {
        filter: brightness(1); 
    }
    25%{
        filter: brightness(1.4); 
    }    
    50% {
        filter: brightness(1.55); 
    }    
    75% {
        filter: brightness(1.2); 
    }
    100% {
        filter: brightness(1); 
    }
}